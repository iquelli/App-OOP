classDiagram 

    TerminalCommand <|-- DoAddFriend

    class DoAddFriend {

        #finalexecute() void
    }

    TerminalCommand <|-- DoEndInteractiveCommunication

    class DoEndInteractiveCommunication {

        #finalexecute() void        
    }

    TerminalCommand <|-- DoPerformPayment

    class DoPerformPayment {

        #finalexecute() void        
    }

    TerminalCommand <|-- DoRemoveFriend

    class DoRemoveFriend {

        #finalexecute() void        
    }

    TerminalCommand <|-- DoSendTextCommunication

    class DoSendTextCommunication {

        #finalexecute() void        
    }

    TerminalCommand <|-- DoShowOngoingCommunication

    class DoShowOngoingCommunication {

        #finalexecute() void        
    }

    TerminalCommand <|-- DoShowTerminalBalance

    class DoShowTerminalBalance {

        #finalexecute() void        
    }

    TerminalCommand <|-- DoSilenceTerminal

    class DoSilenceTerminal {

        #finalexecute() void        
    }

    TerminalCommand <|-- DoStartInteractiveCommunication

    class DoStartInteractiveCommunication {

        #finalexecute() void        
    }

    TerminalCommand <|-- DoTurnOffTerminal

    class DoTurnOffTerminal {

        #finalexecute() void        
    }

    TerminalCommand <|-- DoTurnOnTerminal

    class DoTurnOnTerminal {

        #finalexecute() void        
    }

    class Label {
        -TITLE : String
        -POWER_ON : String
        -POWER_OFF : String
        -MUTE_TERMINAL : String
        -ADD_FRIEND : String
        -REMOVE_FRIEND : String
        -PERFORM_PAYMENT : String
        -SHOW_BALANCE : String
        -SEND_TEXT_COMMUNICATION : String
        -START_INTERACTIVE_COMMUNICATION : String
        -END_INTERACTIVE_COMMUNICATION : String
        -SHOW_ONGOING_COMMUNICATION : String
    }

    <<interface>> Label

    %% este Menu extends o menu de pt.tecnico.uilib.menus.Menu
    uilibmenusMenu <|-- Menu

    class Menu {

    }

    class Message{

        -originIsOff(key : String)$ String
        -destinationIsOff(key : String)$ String
        -originIsBusy(key : String)$ String
        -destinationIsBusy(key : String)$ String
        -destinationIsSilent(key : String)$ String
        -unsupportedAtOrigin(key : String, type : String)$ String
        -unsupportedAtDestination(key : String, type : String)$ String
        -communicationCost(cost : long)$ String
        -alreadyOn()$ String
        -alreadyOff()$ String
        -alreadySilent()$ String
        -isAvailable(idTerminal : int, idCaller : int)$ String
        -isAvailableForTextCommunications(idTerminal : int, idCaller : int)$ String
        -terminalPaymentsAndDebts(key : String, payments : long, debts : long)$ String
        -noOngoingCommunication()$ String
        -invalidCommunication()$ String
    }

    <<interface>> Message

    class Prompt{

        -clientKey()$ String
        -terminalKey()$ String
        -paymentValue()$ String
        -commKey()$ String
        -commType()$ String
        -duration()$ String
        -characters()$ String
        -textMessage()$ String
    }

    <<interface>> Prompt

    Command~Terminal~ <|-- TerminalCommand

    class TerminalCommand {
        #_network : Network
    }